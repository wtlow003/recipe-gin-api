basePath: /api/v1
definitions:
  models.Error:
    properties:
      error:
        example: Internal Server Error.
        type: string
      statusCode:
        example: 500
        type: integer
    type: object
  models.Message:
    properties:
      message:
        example: message
        type: string
      statusCode:
        example: 200
        type: integer
    type: object
  models.Recipe:
    properties:
      calories:
        type: integer
      carbs:
        type: integer
      fat:
        type: integer
      fiber:
        type: integer
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      instructions:
        type: string
      name:
        type: string
      protein:
        type: integer
      publishedAt:
        type: string
      satfat:
        type: integer
      servings:
        type: integer
      sugar:
        type: integer
      tags:
        items:
          type: string
        type: array
    type: object
  models.UserDefinedRecipe:
    properties:
      calories:
        type: integer
      carbs:
        type: integer
      fat:
        type: integer
      fiber:
        type: integer
      ingredients:
        items:
          type: string
        type: array
      instructions:
        type: string
      name:
        type: string
      protein:
        type: integer
      satfat:
        type: integer
      servings:
        type: integer
      sugar:
        type: integer
      tags:
        items:
          type: string
        type: array
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: jensenlwt@gmail.com
    name: Low Wei Teck (Jensen)
    url: https://www.linkedin.com/in/weitecklow/
  description: Demo recipe RESTful API developed with Gin framework.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Recipe API
  version: "1.0"
paths:
  /recipes:
    get:
      consumes:
      - application/json
      description: get all recipes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Recipe'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: List recipes
      tags:
      - recipes
    post:
      consumes:
      - application/json
      description: create new recipe
      parameters:
      - description: New recipe
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/models.UserDefinedRecipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Recipe'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Create recipe
      tags:
      - recipes
  /recipes/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Delete recipe
      tags:
      - recipes
    get:
      consumes:
      - application/json
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Recipe'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: List recipe
      tags:
      - recipes
    put:
      consumes:
      - application/json
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated receipe
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/models.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Update recipe
      tags:
      - recipes
  /recipes/search:
    get:
      consumes:
      - application/json
      parameters:
      - description: Recipe search by tag
        in: query
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Recipe'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Search recipes by tag
      tags:
      - recipes
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
