version: "3.9"
services:
  api:
    build: .
    env_file:
      - .env
    networks:
      - api_network
    ports:
      - "8079-8081:8080"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    scale: 3
  mongodb:
    container_name: recipe-mongodb
    image: mongo:latest
    restart: always
    ports:
      - "27015:27017"
    volumes:
      - mongodb-data:/data/db
      # - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    env_file:
      - .env
    command: [ --auth ]
    networks:
      - api_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh admin -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
  redis:
    container_name: recipe-redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis
    env_file:
      - .env
    command: [ "--requirepass ${REDIS_PASSWORD}" ]
    networks:
      - api_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5
  # redis-insight:
  #   container_name: redis-insight
  #   image: redislabs/redisinsight:latest
  #   restart: always
  #   ports:
  #     - "8001:8001"
  #   links:
  #     - redis
  #   networks:
  #     - api_network
  prometheus:
    image: prom/prometheus:v2.27.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always
    networks:
      - api_network
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: always
volumes:
  mongodb-data:
  redis-data:


networks:
  api_network:
    driver: bridge
